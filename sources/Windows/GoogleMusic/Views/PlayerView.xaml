<views:ViewBase
    x:Class="OutcoldSolutions.GoogleMusic.Views.PlayerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:OutcoldSolutions.GoogleMusic.Controls"
    xmlns:views="using:OutcoldSolutions.GoogleMusic.Views"
    mc:Ignorable="d">

    <Grid Height="79" HorizontalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="5" />
            <RowDefinition Height="74" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <Button Height="79" 
                Width="79" 
                Grid.Column="0"
                Grid.RowSpan="2"
                Canvas.ZIndex="1"
                Command="{Binding Path=NavigateToQueueView, Mode=OneTime}">
            <Button.Template>
                <ControlTemplate>
                    <controls:AlbumArtControl Height="79" 
                                            Width="79" 
                                            ImageSize="79" 
                                            Canvas.ZIndex="1"
                                            ImageSource="{Binding Path=BindingModel.CurrentSong.Metadata.AlbumArtUrl, Mode=OneWay}" />
                </ControlTemplate>
            </Button.Template>
        </Button>

        <Slider Grid.Column="1"
                Grid.ColumnSpan="4"
                Grid.Row="0"
                Margin="0, -3, 0, -3"
                IsThumbToolTipEnabled="False"
                VerticalAlignment="Bottom"
                Value="{Binding Path=BindingModel.CurrentPosition, Mode=TwoWay}"
                Maximum="{Binding Path=BindingModel.TotalSeconds, Mode=OneWay}" 
                Visibility="{Binding Path=BindingModel.CurrentSong, Mode=OneWay, Converter={StaticResource NullToInvisibilityConverter}}"
                Canvas.ZIndex="200"/>

        <Border Grid.Column="0" Grid.ColumnSpan="5" Grid.Row="1" >
            <Border.Background>
                <LinearGradientBrush  StartPoint="0,0" EndPoint="1,0">
                    <GradientStop Color="#FF5F5F5F" Offset="0"/>
                    <GradientStop Color="#FF3F3F3F" Offset="0.7"/>
                    <GradientStop Color="#FF3F3F3F" Offset="1"/>
                </LinearGradientBrush>
            </Border.Background>
        </Border>
        
        <Button Grid.Row="1" 
                Grid.Column="1" 
                Margin="10, 10, 0, 0" 
                Command="{Binding Path=NavigateToQueueView, Mode=OneTime}"
                Canvas.ZIndex="50"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Visibility="{Binding Path=BindingModel.CurrentSong, Mode=OneWay, Converter={StaticResource NullToInvisibilityConverter}}">
            <Button.Template>
                <ControlTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="14" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        
                        <StackPanel Orientation="Horizontal" Visibility="{Binding Path=BindingModel.IsBusy, Converter={StaticResource BooleanToInvisibilityConverter}}">
                            <StackPanel.Resources>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource SmallTextStyle}">
                                    <Setter Property="FontFamily" Value="Arial" />
                                    <Setter Property="FontWeight" Value="Normal" />
                                </Style>
                            </StackPanel.Resources>
                            
                            <TextBlock Text="{Binding Path=BindingModel.CurrentPosition, Mode=OneWay, Converter={StaticResource DoubleToTimeConverter}}" />
                            <TextBlock Text="/"  Margin="5, 0"/>
                            <TextBlock Text="{Binding Path=BindingModel.TotalSeconds, Converter={StaticResource DoubleToTimeConverter}, Mode=OneWay}" />

                            <StackPanel Margin="10, 0, 0, 0" Orientation="Horizontal" Visibility="{Binding Path=BindingModel.IsDownloaded, Mode=OneWay, Converter={StaticResource BooleanToInvisibilityConverter}}">
                                <TextBlock>(Buffering</TextBlock>
                                <TextBlock Margin="5, 0, 0, 0" Text="{Binding Path=BindingModel.DownloadProgress, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter=P0}"/>
                                <TextBlock>)</TextBlock>
                            </StackPanel>
                        </StackPanel>

                        <StackPanel Grid.Row="1">
                            <TextBlock Style="{StaticResource BodyTextStyle}" 
                                   Text="{Binding Path=BindingModel.CurrentSong.Title, Mode=OneWay}" 
                                   TextWrapping="NoWrap" 
                                   TextTrimming="WordEllipsis"/>

                            <TextBlock Style="{StaticResource BodyTextStyle}" 
                                   Text="{Binding Path=BindingModel.CurrentSong.ArtistAndAlbum, Mode=OneWay}" 
                                   Foreground="{StaticResource ApplicationSecondaryForegroundThemeBrush}"
                                   TextWrapping="NoWrap" 
                                   TextTrimming="WordEllipsis"/>
                        </StackPanel>
                        
                    </Grid>
                </ControlTemplate>
            </Button.Template>
        </Button>


        <StackPanel Grid.Row="1"
                    Orientation="Horizontal"
                    VerticalAlignment="Stretch"
                    Grid.Column="2">

            <controls:AppBarToggleButton Style="{StaticResource RepeatAllAppBarButtonStyle}" 
                                         IsChecked="{Binding Path=IsRepeatAllEnabled, Mode=TwoWay}"
                                         Command="{Binding Path=RepeatAllCommand, Mode=OneTime}"
                                         FontSize="16"
                                         AutomationProperties.Name=""/>

            <controls:ButtonWithHover Style="{StaticResource SkipBackAppBarButtonStyle}" 
                    Command="{Binding Path=SkipBackCommand, Mode=OneTime}"
                    FontSize="24"
                    AutomationProperties.Name=""
                    Canvas.ZIndex="100"/>
            <controls:ButtonWithHover Style="{StaticResource PlayAppBarButtonStyle}"  
                    Visibility="{Binding Path=BindingModel.IsPlaying, Mode=OneWay, Converter={StaticResource BooleanToInvisibilityConverter}}" 
                    Command="{Binding Path=PlayCommand, Mode=OneTime}"
                    FontSize="34"
                    AutomationProperties.Name=""
                    Canvas.ZIndex="100"/>
            <controls:ButtonWithHover Style="{StaticResource PauseAppBarButtonStyle}" 
                    Visibility="{Binding Path=BindingModel.IsPlaying, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" 
                    Command="{Binding Path=PauseCommand, Mode=OneTime}"
                    FontSize="34"
                    AutomationProperties.Name=""
                    Canvas.ZIndex="100"/>
            <controls:ButtonWithHover Style="{StaticResource SkipAheadAppBarButtonStyle}"  
                    Command="{Binding Path=SkipAheadCommand, Mode=OneTime}"
                    FontSize="24"
                    AutomationProperties.Name=""
                    Canvas.ZIndex="100"/>

            <controls:AppBarToggleButton Style="{StaticResource ShuffleAppBarButtonStyle}" 
                                         IsChecked="{Binding Path=IsShuffleEnabled, Mode=TwoWay}"
                                         Command="{Binding Path=ShuffleCommand, Mode=OneTime}"
                                         FontSize="16"
                                         AutomationProperties.Name=""/>

            

        </StackPanel>

        <StackPanel Grid.Row="1" Grid.Column="4" Orientation="Horizontal">
            <Button Style="{StaticResource MoreAppBarButtonStyle}" 
                    Command="{Binding Path=ShowMoreCommand, Mode=OneTime}"
                    AutomationProperties.Name=""
                    Canvas.ZIndex="100"/>
        </StackPanel>
        

    </Grid>

    
    
</views:ViewBase>
